#+TITLE: Experimental packages
#+AUTHOR: nazar
#+EMAIL: nazar@autistici.org
#+LANGUAGE: en
#+OPTIONS: title:t author:t email:nil toc:nil num:nil timestamp:nil

* Chroot

Official Solus  packaging guide  available from  [[https://getsol.us]]. It
boils down to  a few commands that initialize  chroot environment. Run
once in terminal, with sudo

#+begin_src sh
eopkg install -y go-task ypkg git solbuild-config-unstable solbuild make 
solbuild init -p unstable-x86_64
solbuild update -p unstable-x86_64
#+end_src

Now you can build experimental packages

* Packages

** antiword

Convert  Microsoft Word  files to  plain  text, see  =man antiword=  for
details.   Build  with  =make antiword=,  when  =path-to-eopkg-file=  gets
printed to the screen, install with =eopkg install path-to-eopkg-file=.

** apktool

Assemble and disassemble Android apk  files, see [[https://apktool.org/][homepage]] for details.
Build with =make  apktool=, when =path-to-eopkg-file= gets  printed to the
screen, install with =eopkg install path-to-eopkg-file=.


** bandwhich

A  utility  for displaying  current  network  utilization by  process,
connection  and remote  IP/hostname.  See =man  bandwhich= for  details.
Build with =make bandwhich=, when =path-to-eopkg-file= gets printed to the
screen, install with =eopkg install path-to-eopkg-file=.

** bb

A native  Clojure interpreter for  scripting with fast  startup. Build
with  =make bb=,  when =path-to-eopkg-file=  gets printed  to the  screen,
install with =eopkg install path-to-eopkg-file=.

** ditaa

An ASCII diagramming tool, for more details see [[https://ditaa.sourceforge.net][home page]].  Build with
=make  ditaa=,  when  =path-to-eopkg-file=  gets printed  to  the  screen,
install with =eopkg install path-to-eopkg-file=.

** fio

Simulate IO  load, for more details  see below.  Build with  =make fio=,
when =path-to-eopkg-file= gets printed to the screen, install with =eopkg
install path-to-eopkg-file=.

Simulate disk  read with =fio read.ini  | grep READ |  awk '{print $2}'=
where read.ini is

#+begin_src conf
[global]
randrepeat=1
ioengine=libaio
bs=4k
ba=4k
size=1G
direct=1
gtod_reduce=1
norandommap
iodepth=64
numjobs=1
[randomreads]
startdelay=0
filename=sb-io-test
readwrite=randread
#+end_src

Simulate disk write with =fio write.ini | grep WRITE | awk '{print $2}'=
where write.ini is

#+begin_src conf
[global]
randrepeat=1
ioengine=libaio
bs=4k
ba=4k
size=1G
direct=1
gtod_reduce=1
norandommap
iodepth=64
numjobs=1
[randomwrites]
startdelay=0
filename=sb-io-test
readwrite=randwrite
#+end_src


** firestarter

A CPU  stress test utility,  for more details see  =FIRESTARTER --help=.
Build with  =make firestarter=, when =path-to-eopkg-file=  gets printed to
the screen, install with =eopkg install path-to-eopkg-file=.

** gbstudio

A  quick and  easy  to  use retro  adventure  game  creator, for  more
information   see  [[https://www.gbstudio.dev][home   page]].   Build   with  =make   gbstudio=,  when
=path-to-eopkg-file=  gets printed  to  the screen,  install with  =eopkg
install path-to-eopkg-file=.

** gmaptool

A program  for splitting and merging  maps in Garmin format,  for more
details   see   [[https://www.gmaptool.eu/en/content/gmaptool][home   page]].    Build   with   =make   gmaptool=,   when
=path-to-eopkg-file=  gets printed  to  the screen,  install with  =eopkg
install path-to-eopkg-file=.

** gnuplot

A portable command-line driven graphing  utility, for more details see
=man gnuplot=.   Build with  =make gnuplot=, when  =path-to-eopkg-file= gets
printed to the screen, install with =eopkg install path-to-eopkg-file=.

** gpxsee

GPS log file viewer and analyzer that supports all common GPS log file
formats.  Build with =make gpxsee=, when =path-to-eopkg-file= gets printed
to the screen, install with =eopkg install path-to-eopkg-file=.

** hunspell-uk

Hunspell dictionary for Ukrainian, for  more details see =man hunspell=.
Build with  =make hunspell-uk=, when =path-to-eopkg-file=  gets printed to
the screen, install with =eopkg install path-to-eopkg-file=.

** iosevka

Font designed  for code,  terminals, technical documents.   Build with
=make  iosevka=, when  =path-to-eopkg-file=  gets printed  to the  screen,
install with =eopkg install path-to-eopkg-file=.

** janet

[[https://janet-lang.org][Janet]] is  an embeddable and prototyping  language. It has a  rich core
library, a  REPL, a compiler, and  a =jpm= build tool,  for more details
see  =man   janet=  and  =man  jpm=   .   Build  with  =make   janet=,  when
=path-to-eopkg-file=  gets printed  to  the screen,  install with  =eopkg
install path-to-eopkg-file=.

** kitty

Cross-platform, fast, feature-rich, GPU  based terminal, see =man kitty=
for  details.  Build  with  =make kitty=,  when =path-to-eopkg-file=  gets
printed to the screen, install with =eopkg install path-to-eopkg-file=.

** kodi

Packaging  kodi takes  30 to  60 minutes  and 10G  of free  space.  In
project directory run =make kodi= - after a while the command will write
to the  screen =path-to-eopkg-file=.   Install it  on your  Solus system
with =eopkg install path-to-eopkg-file=.  Now you can run =kodi= and point
it to  your library to  get media played on  your living room  PC.  To
stream videos with  kodi you'll need google account  and youtube addon
from kodi official repository.

Kodi   v19   introduced   Retroplayer   -   an   integrated   libretro
frontend. When compared with  Retroarch, Retroplayer UI is simplistic,
but  it  makes  retrogaming  instantly  available  without  having  to
ducktape  retroarch  launchers.   Libretro cores  are  available  from
=libretro buildbot=.   First install  unofficial [[https://github.com/zach-morris/kodi_libretro_buildbot_game_addons][repository]]  addon, then
browse  the repository  and install  libretro cores  specific to  your
emulation needs.  Kodi ten feet UI works best with a gamepad, and with
Retroplayer emulation is as easy as playing media file.

** languagetool

Style  and  Grammar  Checker  for  25+  Languages.   Build  with  =make
languagetool=,  when =path-to-eopkg-file=  gets  printed  to the  screen,
install with =eopkg install path-to-eopkg-file=.

** libresprite

Animated sprite editor & pixel art  tool based on Aceprite. Build with
=make libresprite=, when =path-to-eopkg-file=  gets printed to the screen,
install with =eopkg install path-to-eopkg-file=.

** luajit

Just-in-time compiler  and drop-in replacement  for Lua 5.1,  for more
details   see   =man   luajit=.     Build   with   =make   luajit=,   when
=path-to-eopkg-file=  gets printed  to  the screen,  install with  =eopkg
install path-to-eopkg-file=.

** metabase

Get business intelligence  and analytics to everyone  in your company,
for  more  details  see  [[https://metabase.com][homepage]].  Build  with  =make  metabase=,  when
=path-to-eopkg-file=  gets printed  to  the screen,  install with  =eopkg
install path-to-eopkg-file=.

** mu

A tool for dealing with  e-mail messages stored in the Maildir-format,
for details see =info mu=.   Build with =make mu=, when =path-to-eopkg-file=
gets   printed   to   the   screen,   install   with   =eopkg   install
path-to-eopkg-file=.

** pandoc3

Convert markup text  into other formats, see =man  pandoc3= for details.
Build with =make  pandoc3=, when =path-to-eopkg-file= gets  printed to the
screen, install with =eopkg install path-to-eopkg-file=.

** pdf2djvu

Convert pdf files to djvu format,  see =man pdf2djvu= for details. Build
with  =make  pdf2djvu=,  when  =path-to-eopkg-file= gets  printed  to  the
screen, install with =eopkg install path-to-eopkg-file=.

** sdcv

A console  version of StarDict, see  =man sdcv= for details.  Build with
=make sdcv=, when =path-to-eopkg-file= gets printed to the screen, install
with =eopkg install path-to-eopkg-file=.

** tailscale

Manage  virtual network,  see [[https://tailscale.com][homepage]]  for details.  Build with  =make
tailscale=, when =path-to-eopkg-file= gets printed to the screen, install
with =eopkg install path-to-eopkg-file=.

** tiled

Also known as mapeditor - a  tile map editor for all tile-based games,
such as RPGs,  platformers or Breakout clones. Build  with =make tiled=,
when =path-to-eopkg-file= gets printed to the screen, install with =eopkg
install path-to-eopkg-file=.


** tmx2lua

Convert  =tiled= maps  into Lua  data, see  =tmx2lua --help=  for details.
Build with =make  tmx2lua=, when =path-to-eopkg-file= gets  printed to the
screen, install with =eopkg install path-to-eopkg-file=.

** ttyplot

Realtime plotting  utility for  terminal/console with data  input from
stdin, see  =man ttyplot=  for details.  Build  with =make  ttyplot=, when
=path-to-eopkg-file=  gets printed  to  the screen,  install with  =eopkg
install path-to-eopkg-file=.

** visidata

A terminal  spreadsheet multitool for discovering  and arranging data,
see   =man   vd=  for   details.    Build   with  =make   visidata=   when
=path-to-eopkg-file=  gets printed  to  the screen,  install with  =eopkg
install path-to-eopkg-file=.

** ziglang

General-purpose  programming language  and  toolchain for  maintaining
robust, optimal, and reusable software. See =zig -h= for details.  Build
with =make ziglang=, when =path-to-eopkg-file= gets printed to the screen,
install with =eopkg install path-to-eopkg-file=.


** zotero

Bibliography manager.  Build with =make zotero=, when =path-to-eopkg-file=
gets   printed   to   the   screen,   install   with   =eopkg   install
path-to-eopkg-file=.
